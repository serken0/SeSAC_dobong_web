<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>jwt 인증</title>
    <!-- axios cdn -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>jwt</h1>
    <div id="info"></div>

    <script>
      // 즉시 실행 함수
      // 함수를 만듦과 동시에 호출
      (function () {
        console.log("즉시 실행 함수");
        console.log("즉시 실행 익명 함수");
      })();

      ((a) => {
        console.log("화살표 함수도 가능합니다");
        console.log(a); //+ 1 인자 전달 가능
      })(1);

      //+ 함수 이름 설정도 가능
      (function text(t) {
        console.log(t);
      })("안녕하세요");

      /* 
      왜 사용하나요?
      1. 전역 변수 사용을 피하기 위해서 사용
        (전역 변수는 다른 코드에 영향을 미칠 수 있어 피하는 게 좋습니다.)

      2. 라이브러리 내의 전역 변수 충돌을 피할 수 있음
      */

      (async function () {
        const info = document.getElementById("info");
        const token = localStorage.getItem("login");

        console.log(info);
        console.log(token);

        let data = "";
        if (!token) {
          // localStorage에 토큰이 없다면, 로그인이 안된 상태
          data = '<a href="/login">로그인</a>';

          info.innerHTML = data;
        } else {
          // localStorage에 토큰이 있을 때, 로그인 된 상태
          const response = await axios({
            method: "POST",
            url: "/token",
            headers: {
              //+ 헤더에 보내는 이유: get요청과 post요청의 일관성을 위해. get은 post와 다르게 body에 담아 보낼 수 없기 때문
              Authorization: `Bearer ${token}`,
            },
          });
          console.log(response.data);
          // {result:false, message:"인증된 ~~~"}
          // {result:true, name: "cocoa"}

          if (response.data.result) {
            data = `
            <p>${response.data.name}님 환영합니다</p>
            <button type="button" onclick="logout()">로그아웃</button>
            `;

            info.innerHTML = data;
          }
        }
      })();

      function logout() {
        // 로컬 스토리지에서 jwt 정보 삭제
        localStorage.clear();
        // 새로고침으로 뷰화면 변경
        document.location.reload();
      }
    </script>
  </body>
</html>
